/*
/*
SQL Report for 3 in row - Purchases matrix 
https://github.com/deltaDNA/sql-cookbook/blob/master/KPIs/first_two_purchases_matrix.sql
*/

--declare
--@start_date date = '2023-06-01',
--@finish_date date = '2023-07-01';

with t1 as (
  select 
     eventtime
    ,created
    ,devtodevid
    ,priceusd
    ,valid
    ,rank() over (partition by devtodevid order by lastpaymentdate) as transactionNumber
  from p102968.payments
  where eventtime >= current_date - interval '7 day' and eventtime < current_date
  --and eventtime between @start_date and @finish_date
  and created > (select min(eventtime) from p102968.payments)--only get starters within time window
    and paymentsum is not null
    and country not in ('UA')
    and valid is true
    and not cheater
    and not tester 
)

,t2 as (
  select
    devtodevid
    ,eventtime::date - created::date as lifetime
    ,min(case when transactionNumber =1 then priceusd end) as firstTransaction 
    ,min(case when transactionNumber =2 then priceusd end) as secondTransaction
    ,min(case when transactionNumber =3 then priceusd end) as thirdTransaction
    ,sum(priceusd) as sum_transaction
  from t1
  group by 1, 2
  having min(case when transactionNumber =1 then priceusd end) > 0
  order by 6 desc
)

, t3 as (  
  select 
    eventtime::date - created::date as lifetime
    ,round(avg(priceusd),2) as avg_transaction
    ,round(median(priceusd),2) as median_transaction
    ,count(*) as users
  from t1
  group by 1
)

select * from t2 order by 1;
