/*
/*
https://github.com/deltaDNA/sql-cookbook/blob/master/KPIs/New_Player_Retention_Matrix.sql
*/

----------------------------
-- New Player Retention Matrix

declare 
--@start_date date = '2022-10-01',
--@finish_date date = '2022-10-30',
@install_interval interval = '30 day';

with days_data as (
select devtodevid 
		, created::date as created
		, eventtime::date as eventtime
	from p104704.sessions
	where created > current_date - @install_interval and eventtime < current_date
	--where created between @start_date and @finish_date
	group by 1, 2, 3
),

matrix as (
select created
  , count (distinct case when eventtime - created = 0 then devtodevid else null end) as "installs"
 	, count (distinct case when eventtime - created = 1 then devtodevid else null end) as "R1q"
	, count (distinct case when eventtime - created = 2 then devtodevid else null end) as "R2q"
	, count (distinct case when eventtime - created = 3 then devtodevid else null end) as "R3q"
	, count (distinct case when eventtime - created = 4 then devtodevid else null end) as "R4q"
	, count (distinct case when eventtime - created = 5 then devtodevid else null end) as "R5q"
	, count (distinct case when eventtime - created = 6 then devtodevid else null end) as "R6q"
	, count (distinct case when eventtime - created = 7 then devtodevid else null end) as "R7q"
	, count (distinct case when eventtime - created = 8 then devtodevid else null end) as "R8q"
	, count (distinct case when eventtime - created = 9 then devtodevid else null end) as "R9q"
	, count (distinct case when eventtime - created = 10 then devtodevid else null end) as "R10q"
	, count (distinct case when eventtime - created = 11 then devtodevid else null end) as "R11q"
	, count (distinct case when eventtime - created = 12 then devtodevid else null end) as "R12q"
	, count (distinct case when eventtime - created = 13 then devtodevid else null end) as "R13q"
	, count (distinct case when eventtime - created = 14 then devtodevid else null end) as "R14q"
	, count (distinct case when eventtime - created = 15 then devtodevid else null end) as "R15q"
	, count (distinct case when eventtime - created = 16 then devtodevid else null end) as "R16q"
	, count (distinct case when eventtime - created = 17 then devtodevid else null end) as "R17q"
	, count (distinct case when eventtime - created = 18 then devtodevid else null end) as "R18q"
	, count (distinct case when eventtime - created = 19 then devtodevid else null end) as "R19q"
	, count (distinct case when eventtime - created = 20 then devtodevid else null end) as "R20q"
	, count (distinct case when eventtime - created = 21 then devtodevid else null end) as "R21q"
	, count (distinct case when eventtime - created = 22 then devtodevid else null end) as "R22q"
	, count (distinct case when eventtime - created = 23 then devtodevid else null end) as "R23q"
	, count (distinct case when eventtime - created = 24 then devtodevid else null end) as "R24q"
	, count (distinct case when eventtime - created = 25 then devtodevid else null end) as "R25q"
	, count (distinct case when eventtime - created = 26 then devtodevid else null end) as "R26q"
	, count (distinct case when eventtime - created = 27 then devtodevid else null end) as "R27q"
	, count (distinct case when eventtime - created = 28 then devtodevid else null end) as "R28q"
	--, count (distinct case when eventtime - created = 29 then devtodevid else null end) as "R29q"
	--, count (distinct case when eventtime - created = 30 then devtodevid else null end) as "R30q"
from days_data
group by 1
),

fin_matrix as( select created, "installs"
  ,round("R1q" / "installs"::float * 100, 2) as "R1"
  ,round("R2q" / "installs"::float * 100, 2) as "R2"
  ,round("R3q" / "installs"::float * 100, 2) as "R3"
  ,round("R4q" / "installs"::float * 100, 2) as "R4"
  ,round("R5q" / "installs"::float * 100, 2) as "R5"
  ,round("R6q" / "installs"::float * 100, 2) as "R6" 
  ,round("R7q" / "installs"::float * 100, 2) as "R7"
  ,round("R8q" / "installs"::float * 100, 2) as "R8"
  ,round("R9q" / "installs"::float * 100, 2) as "R9"
  ,round("R11q" / "installs"::float * 100, 2) as "R11"
  ,round("R12q" / "installs"::float * 100, 2) as "R12"
  ,round("R13q" / "installs"::float * 100, 2) as "R13"
  ,round("R14q" / "installs"::float * 100, 2) as "R14"
  ,round("R15q" / "installs"::float * 100, 2) as "R15"
  ,round("R16q" / "installs"::float * 100, 2) as "R16" 
  ,round("R17q" / "installs"::float * 100, 2) as "R17"
  ,round("R18q" / "installs"::float * 100, 2) as "R18"
  ,round("R19q" / "installs"::float * 100, 2) as "R19"
  ,round("R20q" / "installs"::float * 100, 2) as "R20"
  ,round("R21q" / "installs"::float * 100, 2) as "R21"
  ,round("R22q" / "installs"::float * 100, 2) as "R22"
  ,round("R23q" / "installs"::float * 100, 2) as "R23" 
  ,round("R24q" / "installs"::float * 100, 2) as "R24"
  ,round("R25q" / "installs"::float * 100, 2) as "R25"
  ,round("R26q" / "installs"::float * 100, 2) as "R26"
  ,round("R27q" / "installs"::float * 100, 2) as "R27"   
  ,round("R28q" / "installs"::float * 100, 2) as "R28"
  --,round("R29q" / "installs"::float * 100, 2) as "R29"
  --,round("R30q" / "installs"::float * 100, 2) as "R30" 
from matrix
)

select * from fin_matrix order by 1
